name: Deploy to GCP Staging VM

on:
  push:
    branches:
      - develop  # Deploy when changes are pushed to develop branch
  workflow_dispatch:  # Allow manual triggering

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: nest-prisma-crud-staging
  REGION: us-central1  # Change to your preferred GCP region

jobs:
  deploy:
    name: Deploy to VM (Staging)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            DATABASE_URL=${{ secrets.STAGING_DATABASE_URL }}
            RABBITMQ_URL=${{ secrets.STAGING_RABBITMQ_URL }}
            NODE_ENV=staging

      - name: Get VM IP address
        id: get_vm_ip
        run: |
          VM_IP=$(terraform -chdir=. output -raw app_url | sed 's|http://||')
          echo "VM_IP=$VM_IP" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VM_SSH_PRIVATE_KEY }}

      - name: Add VM to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ steps.get_vm_ip.outputs.VM_IP }} >> ~/.ssh/known_hosts
        continue-on-error: true

      - name: Trigger update on VM
        run: |
          ssh ${{ secrets.VM_SSH_USER }}@${{ steps.get_vm_ip.outputs.VM_IP }} 'cd /app && ./update.sh'
        continue-on-error: true

      - name: Show Output
        run: echo "Deployed to http://${{ steps.get_vm_ip.outputs.VM_IP }}"
